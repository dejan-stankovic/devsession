{"version":3,"sources":["components/TitleInfo/TitleInfo.tsx","components/Preview/Preview.tsx","components/AlphaWarningHeader/AlphaWarningHeader.tsx","App.tsx","index.tsx"],"names":["styles","StyleSheet","create","getStarted","width","position","right","getStartedBox","margin","border","concat","Colors","GRAY3","borderRadius","getStartedBoxSection","textAlign","color","borderBottom","padding","transition",":last-child",":hover","GRAY5","TitleInfo","props","copyCommand","document","getElementById","select","execCommand","react","className","css","data","style","height","verticalAlign","fontSize","letterSpacing","inputGroup","id","large","readOnly","leftIcon","onClick","rightElement","buttons","icon","minimal","value","method","action","intent","type","marginTop","href","target","video","marginBottom","videoContainer","overflow","container","GRAY1","subTextContainer","paddingLeft","subTextHead","subTextText","Preview","controls","playsinline","autoPlay","muted","loop","src","videoFileName","title","text","AlphaWarningHeader","backgroundColor","ORANGE1","ORANGE5","DARK_GRAY2","ReactDOM","render","AlphaWarningHeader_AlphaWarningHeader","TitleInfo_TitleInfo","Preview_Preview"],"mappings":"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","file":"static/js/main.b3980a4e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Button, Colors, InputGroup} from \"@blueprintjs/core\";\nimport { StyleSheet, css } from 'aphrodite';\n\nconst styles = StyleSheet.create({\n  getStarted: {\n    width: '30%',\n    position: 'fixed',\n    right: 0\n  },\n  getStartedBox: {\n    margin: '6em',\n    border: `1px solid ${Colors.GRAY3}`,\n    borderRadius: '1em'\n  },\n  getStartedBoxSection: {\n    textAlign: 'center',\n    color: Colors.GRAY3,\n    borderBottom: `1px solid ${Colors.GRAY3}`,\n    padding: '2em',\n    transition: 'color .1s ease',\n    ':last-child': {\n      borderBottom: '0'\n    },\n    ':hover': {\n      color: Colors.GRAY5\n    }\n  }\n});\n\nexport const TitleInfo: React.FunctionComponent<{}> = props => {\n  const copyCommand = () => {\n    const i = document.getElementById('npxDevsessionInput')! as HTMLInputElement;\n    i.select();\n    document.execCommand('copy');\n  };\n\n  return (\n    <div className={css(styles.getStarted)}>\n      <div className={css(styles.getStartedBox)}>\n        <div className={css(styles.getStartedBoxSection)}>\n          <object data=\"logo.svg\" style={{ height: '6em', margin: '0 15px 0 5px', verticalAlign: 'middle' }} />\n          <h1 style={{\n            fontSize: '2em',\n            letterSpacing: '8px',\n            color: 'white'\n          }}>\n            DevSession\n          </h1>\n        </div>\n        <div className={css(styles.getStartedBoxSection)}>\n          <p>Open-Source collaborative IDE with many features and extremely quick setup!</p>\n        </div>\n        <div className={css(styles.getStartedBoxSection)}>\n          <p>Node installed? Get started in under a minute with a single terminal command!</p>\n          <InputGroup\n            id={'npxDevsessionInput'}\n            large={true}\n            readOnly={true}\n            leftIcon=\"console\"\n            onClick={copyCommand}\n            rightElement={(\n              <Button\n                icon={'clipboard'}\n                minimal={true}\n                onClick={copyCommand}\n              />\n            )}\n            value={'npx devsession'}\n          />\n          </div>\n        <div className={css(styles.getStartedBoxSection)}>\n          <p>Download the devsession GUI starter for Windows</p>\n          <form method={'get'} action={'https://github.com/lukasbach/devsession/releases/latest/download/devsession-win.zip'}>\n            <Button\n              intent={\"primary\"}\n              icon={\"download\"}\n              large={true}\n              type={'submit'}\n            >\n              Download\n            </Button>\n          </form>\n          <p style={{marginTop: '1em'}}>\n            <a\n              href={'https://github.com/lukasbach/devsession/releases'}\n              target={'_blank'}\n            >\n              Other download options...\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {css, StyleSheet} from \"aphrodite\";\nimport {Colors} from \"@blueprintjs/core\";\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '65%',\n    marginTop: '-2.5%',\n    marginBottom: '-3%'\n  },\n  videoContainer: {\n    overflow: 'hidden'\n  },\n  container: {\n    padding: '40px 100px',\n    color: Colors.GRAY1,\n    transition: 'color .3s ease',\n    ':hover': {\n      color: Colors.GRAY3\n    }\n  },\n  subTextContainer: {\n    paddingLeft: '3em',\n    width: '65%'\n  },\n  subTextHead: {\n    paddingLeft: '2em'\n  },\n  subTextText: {\n    paddingLeft: '6em'\n  }\n});\n\nexport const Preview: React.FunctionComponent<{\n  videoFileName: string;\n  title?: string;\n  text?: string;\n}> = props => {\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.videoContainer)}>\n        <video controls={false} className={css(styles.video)} playsinline={true} autoPlay={true} muted={true} loop={true}>\n          <source src={`https://lukasbach.github.io/devsession-videos/${props.videoFileName}`} type=\"video/mp4\" />\n        </video>\n      </div>\n\n      { props.title && props.text && (\n        <div className={css(styles.subTextContainer)}>\n          <h1 className={css(styles.subTextHead)}>{ props.title }</h1>\n          <p className={css(styles.subTextText)}>{ props.text }</p>\n        </div>\n      )}\n    </div>\n  )\n}","import * as React from \"react\";\nimport {Colors} from \"@blueprintjs/core\";\n\nexport const AlphaWarningHeader: React.FunctionComponent = props  => (\n  <div style={{\n    backgroundColor: Colors.ORANGE1,\n    color: Colors.ORANGE5,\n    padding: '1em'\n  }}>\n    This is a very early alpha version! The software and this website are not in a final state.\n  </div>\n)","import * as React from \"react\";\nimport {css, StyleSheet} from \"aphrodite\";\nimport {Colors} from \"@blueprintjs/core\";\nimport {TitleInfo} from \"./components/TitleInfo/TitleInfo\";\nimport {Preview} from \"./components/Preview/Preview\";\nimport {AlphaWarningHeader} from \"./components/AlphaWarningHeader/AlphaWarningHeader\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: Colors.DARK_GRAY2\n  }\n});\n\nexport const App: React.FunctionComponent = props => (\n  <div className={css(styles.container) + ' bp3-dark'}>\n    <AlphaWarningHeader/>\n    <TitleInfo/>\n    <Preview\n      title={'Powerful collaborative IDE'}\n      text={'Quickly start a devsession server on your local machine, and your team members can join the session and' +\n      ' work with you on your project\\'s code. You can see your team members cursors and code changes in realtime, which' +\n      ' makes it great for pair-programming, hackathons or just helping your colleague on a coding problem.'}\n      videoFileName={'collaborative.mp4'}\n    />\n\n    <Preview\n      title={'Customizable editor'}\n      text={'You can change the color scheme of the editor and of the entire application and customize various other things.'}\n      videoFileName={'customizable.mp4'}\n    />\n\n    <Preview\n      title={'Filesystem integration'}\n      text={'You get direct access to the project directory. All users can create, change and delete files and folders,' +\n      ' if they have the sufficient permissions.'}\n      videoFileName={'filesystem.mp4'}\n    />\n\n    <Preview\n      title={'Easy to use permissions'}\n      text={'You can precisely define the permissions that your team members have. They can directly ask for additional' +\n      ' permissions within the application, if they require them.'}\n      videoFileName={'permissions.mp4'}\n    />\n\n    <Preview\n      title={'Professional permission management'}\n      text={'In the permission admin panel you can get an overview of who can do what in your session and change the' +\n      ' permissions that members have.'}\n      videoFileName={'permissionmanagement.mp4'}\n    />\n\n    <Preview\n      title={'Built-in terminal'}\n      text={'You can create and operate terminals which run on the session host to build or run your code. Only users' +\n      ' with sufficient permissions can access the terminals.'}\n      videoFileName={'terminal.mp4'}\n    />\n\n    <Preview\n      title={'Easy port forwarding'}\n      text={'Building an web application and want everyone in your session to directly see the results? DevSession ' +\n      'allows you to directly open up ports on which your development servers run using tools like localtunnel and ngrok.'}\n      videoFileName={'portforwarding.mp4'}\n    />\n  </div>\n);","import {App} from \"./App\";\nimport ReactDOM from \"react-dom\";\nimport * as React from \"react\";\n\nimport \"./index.css\";\n\nReactDOM.render((<App />), document.getElementById(\"root\"));"],"sourceRoot":""}